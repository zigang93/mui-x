{
  "componentDescription": "",
  "propDescriptions": {
    "ampm": "12h/24h view for hour selection clock.",
    "ampmInClock": "Display ampm controls under the clock (instead of in the toolbar).",
    "autoFocus": "Set to <code>true</code> if focus should be moved to clock picker.",
    "classes": "Override or extend the styles applied to the component. See <a href=\"#css\">CSS API</a> below for more details.",
    "components": "Overrideable components.",
    "componentsProps": "The props used for each component slot.",
    "date": "Selected date @DateIOType.",
    "disabled": "If <code>true</code>, the picker and text field are disabled.",
    "disableIgnoringDatePartForTimeValidation": "Do not ignore date part when validating min/max time.",
    "getClockLabelText": "Accessible text that helps user to understand which time and view is selected.<br><br><strong>Signature:</strong><br><code>function(view: ClockPickerView, time: TDate | null, adapter: MuiPickersAdapter&lt;TDate&gt;) =&gt; string</code><br><em>view:</em> The current view rendered.<br><em>time:</em> The current time.<br><em>adapter:</em> The current date adapter.<br> <em>returns</em> (string): The clock label.",
    "getHoursClockNumberText": "Get clock number aria-text for hours.<br><br><strong>Signature:</strong><br><code>function(hours: string) =&gt; string</code><br><em>hours:</em> The hours to format.<br> <em>returns</em> (string): the formatted hours text.",
    "getMinutesClockNumberText": "Get clock number aria-text for minutes.<br><br><strong>Signature:</strong><br><code>function(minutes: string) =&gt; string</code><br><em>minutes:</em> The minutes to format.<br> <em>returns</em> (string): the formatted minutes text.",
    "getSecondsClockNumberText": "Get clock number aria-text for seconds.<br><br><strong>Signature:</strong><br><code>function(seconds: string) =&gt; string</code><br><em>seconds:</em> The seconds to format.<br> <em>returns</em> (string): the formatted seconds text.",
    "leftArrowButtonText": "Left arrow icon aria-label text.",
    "maxTime": "Max time acceptable time. For input validation date part of passed object will be ignored if <code>disableIgnoringDatePartForTimeValidation</code> not specified.",
    "minTime": "Min time acceptable time. For input validation date part of passed object will be ignored if <code>disableIgnoringDatePartForTimeValidation</code> not specified.",
    "minutesStep": "Step over minutes.",
    "onChange": "On change callback @DateIOType.",
    "onViewChange": "Callback fired on view change.<br><br><strong>Signature:</strong><br><code>function(view: ClockPickerView) =&gt; void</code><br><em>view:</em> The new view.",
    "openTo": "Initially open view.",
    "readOnly": "Make picker read only.",
    "rightArrowButtonText": "Right arrow icon aria-label text.",
    "shouldDisableTime": "Dynamically check if time is disabled or not. If returns <code>false</code> appropriate time point will ot be acceptable.<br><br><strong>Signature:</strong><br><code>function(timeValue: number, clockType: ClockPickerView) =&gt; boolean</code><br><em>timeValue:</em> The value to check.<br><em>clockType:</em> The clock type of the timeValue.<br> <em>returns</em> (boolean): Returns <code>true</code> if the time should be disabled",
    "view": "Controlled open view.",
    "views": "Views for calendar picker."
  },
  "classDescriptions": {
    "root": { "description": "Styles applied to the root element." },
    "arrowSwitcher": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the arrowSwitcher element"
    }
  },
  "slotDescriptions": {}
}
