{
  "componentDescription": "",
  "propDescriptions": {
    "acceptRegex": "Regular expression to detect &quot;accepted&quot; symbols.",
    "ampm": "12h/24h view for hour selection clock.",
    "ampmInClock": "Display ampm controls under the clock (instead of in the toolbar).",
    "className": "className applied to the root component.",
    "closeOnSelect": "If <code>true</code> the popup or dialog will immediately close after submitting full date.",
    "components": "Overrideable components.",
    "componentsProps": "The props used for each component slot.",
    "desktopModeMediaQuery": "CSS media query when <code>Mobile</code> mode will be changed to <code>Desktop</code>.",
    "DialogProps": "Props applied to the <a href=\"https://mui.com/material-ui/api/dialog/\"><code>Dialog</code></a> element.",
    "disabled": "If <code>true</code>, the picker and text field are disabled.",
    "disableIgnoringDatePartForTimeValidation": "Do not ignore date part when validating min/max time.",
    "disableMaskedInput": "Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format.",
    "disableOpenPicker": "Do not render open picker button (renders only text field with validation).",
    "getClockLabelText": "Accessible text that helps user to understand which time and view is selected.<br><br><strong>Signature:</strong><br><code>function(view: ClockPickerView, time: TDate | null, adapter: MuiPickersAdapter&lt;TDate&gt;) =&gt; string</code><br><em>view:</em> The current view rendered.<br><em>time:</em> The current time.<br><em>adapter:</em> The current date adapter.<br> <em>returns</em> (string): The clock label.",
    "getOpenDialogAriaText": "Get aria-label text for control that opens picker dialog. Aria-label text must include selected date. @DateIOType<br><br><strong>Signature:</strong><br><code>function(date: TInputDate, utils: MuiPickersAdapter&lt;TDate&gt;) =&gt; string</code><br><em>date:</em> The date from which we want to add an aria-text.<br><em>utils:</em> The utils to manipulate the date.<br> <em>returns</em> (string): The aria-text to render inside the dialog.",
    "InputAdornmentProps": "Props to pass to keyboard input adornment.",
    "inputFormat": "Format string.",
    "inputRef": "Pass a ref to the <code>input</code> element.",
    "mask": "Custom mask. Can be used to override generate from format. (e.g. <code>__/__/____ __:__</code> or <code>__/__/____ __:__ _M</code>).",
    "maxTime": "Max time acceptable time. For input validation date part of passed object will be ignored if <code>disableIgnoringDatePartForTimeValidation</code> not specified.",
    "minTime": "Min time acceptable time. For input validation date part of passed object will be ignored if <code>disableIgnoringDatePartForTimeValidation</code> not specified.",
    "minutesStep": "Step over minutes.",
    "onAccept": "Callback fired when date is accepted @DateIOType.<br><br><strong>Signature:</strong><br><code>function(value: TValue) =&gt; void</code><br><em>value:</em> The value that was just accepted.",
    "onChange": "Callback fired when the value (the selected date) changes @DateIOType.<br><br><strong>Signature:</strong><br><code>function(value: TValue, keyboardInputValue: string) =&gt; void</code><br><em>value:</em> The new parsed value.<br><em>keyboardInputValue:</em> The current value of the keyboard input.",
    "onClose": "Callback fired when the popup requests to be closed. Use in controlled mode (see open).",
    "onError": "Callback that fired when input value or new <code>value</code> prop validation returns <strong>new</strong> validation error (or value is valid after error). In case of validation error detected <code>reason</code> prop return non-null value and <code>TextField</code> must be displayed in <code>error</code> state. This can be used to render appropriate form error.<br><a href=\"https://next.material-ui-pickers.dev/guides/forms\">Read the guide</a> about form integration and error displaying.<br><br><strong>Signature:</strong><br><code>function(reason: TError, value: TInputValue) =&gt; void</code><br><em>reason:</em> The reason why the current value is not valid.<br><em>value:</em> The invalid value.",
    "onOpen": "Callback fired when the popup requests to be opened. Use in controlled mode (see open).",
    "onViewChange": "Callback fired on view change.<br><br><strong>Signature:</strong><br><code>function(view: ClockPickerView) =&gt; void</code><br><em>view:</em> The new view.",
    "open": "Control the popup or dialog open state.",
    "OpenPickerButtonProps": "Props to pass to keyboard adornment button.",
    "openTo": "First view to show.",
    "orientation": "Force rendering in particular orientation.",
    "PaperProps": "Paper props passed down to <a href=\"https://mui.com/material-ui/api/paper/\">Paper</a> component.",
    "PopperProps": "Popper props passed down to <a href=\"https://mui.com/material-ui/api/popper/\">Popper</a> component.",
    "readOnly": "Make picker read only.",
    "renderInput": "The <code>renderInput</code> prop allows you to customize the rendered input. The <code>props</code> argument of this render prop contains props of <a href=\"https://mui.com/material-ui/api/text-field/#props\">TextField</a> that you need to forward. Pay specific attention to the <code>ref</code> and <code>inputProps</code> keys.<br><br><strong>Signature:</strong><br><code>function(props: MuiTextFieldPropsType) =&gt; React.ReactNode</code><br><em>props:</em> The props of the input.<br> <em>returns</em> (React.ReactNode): The node to render as the input.",
    "rifmFormatter": "Custom formatter to be passed into Rifm component.<br><br><strong>Signature:</strong><br><code>function(str: string) =&gt; string</code><br><em>str:</em> The un-formatted string.<br> <em>returns</em> (string): The formatted string.",
    "shouldDisableTime": "Dynamically check if time is disabled or not. If returns <code>false</code> appropriate time point will ot be acceptable.<br><br><strong>Signature:</strong><br><code>function(timeValue: number, clockType: ClockPickerView) =&gt; boolean</code><br><em>timeValue:</em> The value to check.<br><em>clockType:</em> The clock type of the timeValue.<br> <em>returns</em> (boolean): Returns <code>true</code> if the time should be disabled",
    "showToolbar": "If <code>true</code>, show the toolbar even in desktop mode.",
    "ToolbarComponent": "Component that will replace default toolbar renderer.",
    "toolbarTitle": "Mobile picker title, displaying in the toolbar.",
    "TransitionComponent": "Custom component for popper <a href=\"https://mui.com/material-ui/transitions/#transitioncomponent-prop\">Transition</a>.",
    "value": "The value of the picker.",
    "views": "Array of views to show."
  },
  "classDescriptions": {},
  "slotDescriptions": {}
}
